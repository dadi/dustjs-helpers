var ___dadiDustJsHelpers=function(dust,options){if(typeof exports!=="undefined"){var JSON5=require("json5");var marked=require("marked");var moment=require("moment");var pluralist=require("pluralist");var _=require("underscore");var s=require("underscore.string");var htmlStrip=require("htmlstrip-native")}dust.webExtensions=options||{};dust.helpers.Truncate=function(chunk,context,bodies,params){var data=context.resolve(params.data);var length=context.resolve(params.length);var ellipsis=context.resolve(params.ellipsis);var str;if(ellipsis==="true"&&data.length>length){str=data.substr(0,length);if(data){str=str.replace(/[\W]*$/,"&hellip;")}}else{str=data.substr(0,length)}return chunk.write(str)};dust.helpers.Trim=function(chunk,context,bodies,params){var data=context.resolve(params.data);return chunk.write(data.trim())};dust.helpers.formatDate=function(chunk,context,bodies,params){var format=context.resolve(params.format);var parseFormat=context.resolve(params.parseFormat);if(params.unix_sec){var unixSec=context.resolve(params.unix_sec);return chunk.write(moment.unix(unixSec).format(format))}else if(params.unix){var unix=context.resolve(params.unix);return chunk.write(moment.unix(unix/1e3).format(format))}else{var data=context.resolve(params.data);return chunk.write(moment(data,parseFormat||format).format(format))}};dust.helpers.formatNumber=function(chunk,context,bodies,params){var data=context.resolve(params.data);var localeString=context.resolve(params.localeString);var style=context.resolve(params.style);var currency=context.resolve(params.currency);var fractionDigits=context.resolve(params.minimumFractionDigits);var options={style:"decimal",minimumFractionDigits:0};if(style)options.style=style;if(currency)options.currency=currency;if(fractionDigits)options.minimumFractionDigits=fractionDigits;try{if(data&&localeString){var result=parseFloat(data.toFixed(2)).toLocaleString(localeString,options);result=result.replace(/\.([\d])$/,".$10");return chunk.write(result)}else{return chunk.write(data)}}catch(err){console.log(err);if(err.stack)console.log(err.stack);return chunk.write(data)}};dust.helpers.markdown=function(chunk,context,bodies,params){var renderer=new marked.Renderer;renderer.link=function(href,title,text){var attrArray=href.split("|");var attrs={};var first=attrArray.shift();if(first)href=first;for(var i=0;i<attrArray.length;i++){var attr=attrArray[i];var attrName="";var attrValue="";var pos=attr.indexOf("=");if(pos>0){attrName=attr.substr(0,pos);attrValue=attr.substr(pos+1)}attrs[attrName]=attrValue}var attrString="";Object.keys(attrs).forEach(function(key){attrString=attrString+key+'="'+attrs[key]+'" '});if(title&&title.length>0){title=' title="'+title+'"'}else{title=""}return'<a href="'+href+'" '+attrString+title+">"+text+"</a>"};if(bodies.block){return chunk.capture(bodies.block,context,function(string,chunk){chunk.end(marked(string,{renderer:renderer}))})}return chunk};dust.helpers.soberMarkdown=function(chunk,context,bodies,params){if(bodies.block){return chunk.capture(bodies.block,context,function(string,chunk){var md=marked(string);var str=md.replace(/<\/p><p[^>]*>/gim,"<br>");str=str.replace(/<p[^>]*>(.*?)<\/p>/gim,"$1");chunk.end(str)})}return chunk};dust.helpers.forceRender=function(chunk,context,bodies,params){var str=context.resolve(params.str);var value=context.resolve(params.value);str=str.replace(/{.*?}/gim,value);return chunk.write(str)};dust.helpers.iter=function(chunk,context,bodies,params){params.items=params.items||[];params.from=params.from||0;params.to=params.to===0?0:params.to||params.items.length;var direction;if(params.from<params.to){direction=1}else{direction=-1;params.to--}var metaContext={$idx:params.from,$len:params.items.length};context=context.push(metaContext);while(metaContext.$idx!==params.to){if(params.items[metaContext.$idx]){chunk=chunk.render(bodies.block,context.push(params.items[metaContext.$idx]))}metaContext.$idx+=direction}context.pop();return chunk};dust.helpers.htmlstrip=function(chunk,context,bodies,params){return chunk.capture(bodies.block,context,function(data,chunk){var options={include_script:false,include_style:false,compact_whitespace:false};data=htmlStrip.html_strip(data,options).trim();chunk.write(data);chunk.end()})};dust.helpers.defaultParam=function(chunk,context,bodies,params){var key=params.key;var value=params.value;if(typeof context.get(key)==="undefined"){context.global[key]=value}};dust.helpers.numberCommas=function(chunk,context,bodies,params){return chunk.capture(bodies.block,context,function(data,chunk){data=data.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",");chunk.write(data);chunk.end()})};dust.helpers.plural=function(chunk,context,bodies,params){var options={val:params.val,auto:params.auto,one:params.one,many:params.many};if(typeof options.val!=="undefined"){var multiple=Boolean(Number(options.val)-1);if(typeof options.auto!=="undefined"){return chunk.write(multiple?pluralist.plural(options.auto).anglicised_plural:pluralist.singular(options.auto).singular_suffix)}else if(options.one&&options.many){var str=multiple?options.many:options.one;return chunk.write(str)}}else if(options.auto){return chunk.write(options.auto)}else{return chunk.write("")}};dust.helpers.htmlEncode=function(chunk,context,bodies,params){return chunk.capture(bodies.block,context,function(data,chunk){data=JSON.stringify(data.toString());chunk.write(data);chunk.end()})};dust.helpers.slugify=function(chunk,context,bodies,params){return chunk.capture(bodies.block,context,function(data,chunk){data=s.slugify(data);chunk.write(data);chunk.end()})};dust.helpers.replace=function(chunk,context,bodies,params){var str=context.resolve(params.str);var search=context.resolve(params.search);var replace=context.resolve(params.replace);var result=str.replace(new RegExp(escapeRegExp(search),"g"),replace);return chunk.write(result)};function escapeRegExp(string){return string.replace(/([.*+?^=!:${}()|[\]\/\\])/g,"\\$1")}dust.helpers.url=function(){return function(chunk,context,bodies,params){if(!dust.webExtensions.components){throw new Error("The @url helper needs the loaded components from DADI Web.")}if(typeof params.page==="undefined"){throw new Error("The @url helper needs a page to work. Please send it in as a string (double quote marks if not referencing a variable).")}var component=_.find(dust.webExtensions.components,function(component){return component.page.key===params.page});if(!component){throw new Error('The @url helper could not find a page with the key "'+params.page+'".')}return component.page.toPath(_.omit(params,"page"))}}();dust.helpers.paginate=function(chunk,context,bodies,params){var err;if(!("page"in params&&"totalPages"in params&&"path"in params)){err=new Error("Insufficient information provided to @paginate helper")}var current=parseInt(params.page,10);var totalPages=parseInt(params.totalPages,10);if(!(isFinite(current)&&isFinite(totalPages))){err=new Error("Parameters provided to @paginate helper are not integers")}var paginateContext={n:current,path:""};if(err){console.log(err);return chunk}context=context.push(paginateContext);function printStep(body,n){paginateContext.n=n;paginateContext.path=context.resolve(params.path);if(n===1){paginateContext.path=(paginateContext.path||"").replace(/1\/?$/,"")}chunk.render(body,context)}var printGap=bodies.gap?printStep.bind(null,bodies.gap):function(){};function printStepOrGap(step){if(step==="."){printGap()}else{printStep(bodies.block,step)}}function getStepSize(distance){if(distance>550){return 500}else if(distance>110){return 100}else if(distance>53){return distance-25}else if(distance>23){return distance-10}else if(distance>=10){return distance-5}else if(distance>=5){return distance-2}else{return 1}}function makeSteps(start,end,tightness){var now;var final;var stepSize;var steps=[];if(tightness==="increase"){now=start;final=end;while(now<final){if(now!==start){steps.push(now)}stepSize=getStepSize(final-now);if(stepSize>1){steps.push(".")}now+=stepSize}}else{now=end;final=start;while(now>final){if(now!==end){steps.push(now)}stepSize=getStepSize(now-final);if(stepSize>1){steps.push(".")}now-=stepSize}steps.reverse()}return steps}if(!totalPages||totalPages===1){if(bodies.else){return chunk.render(bodies.else,context)}return chunk}if(current>1){if(bodies.prev){printStep(bodies.prev,current-1)}printStep(bodies.block,1);_.each(makeSteps(1,current,"increase"),printStepOrGap)}printStep(bodies.current,current);if(current<totalPages){_.each(makeSteps(current,totalPages,"decrease"),printStepOrGap);printStep(bodies.block,totalPages);if(bodies.next){printStep(bodies.next,current+1)}}return chunk};dust.helpers.findWhere=function(chunk,context,bodies,params){var list=params.list;var key=params.key;var value=params.value;var props;var found;if("list"in params&&"key"in params&&"value"in params){found=_.find(list,function(obj){return obj[key]===value})}else if("list"in params&&"props"in params){try{props=JSON5.parse(context.resolve(params.props))}catch(err){throw new Error("The @findWhere dust helper received invalid json for props")}found=_.findWhere(list,props)}else{throw new Error("The @findWhere dust helper is missing a parameter")}if(found){return chunk.render(bodies.block,context.push(found))}else if("else"in bodies){return chunk.render(bodies.else,context)}return chunk};dust.helpers.hashtagToLink=function(chunk,context,bodies,params){var prefix=params.prefix?context.resolve(params.prefix):"";var suffix=params.suffix?context.resolve(params.suffix):"";return chunk.capture(bodies.block,context,function(data,chunk){data=data.replace(/#([\w\/]*)/gim,'<a href="'+prefix+"$1"+suffix+'">#$1</a>');chunk.write(data);chunk.end()})}};if(typeof exports!=="undefined"){module.exports=function(dust,options){___dadiDustJsHelpers(dust,options)}}else{___dadiDustJsHelpers(dust)}